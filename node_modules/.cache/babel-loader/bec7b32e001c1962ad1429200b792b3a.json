{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ar2r1\\\\Desktop\\\\React.JS\\\\0.2 NODE JS\\\\counter-app\\\\src\\\\Counter.js\";\nimport React, { Component } from 'react';\nimport './Counter.css';\nimport Display from './Display';\nimport ButtonsPanel from './ButtonsPanel';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addValue = action => {\n      // let currentCounterValue = this.state.counterValue;\n      if (action === 'add') {\n        this.currentCounterValue += 1;\n      } else if (action === 'reinit') {\n        this.currentCounterValue = this.props.initValue;\n      } else {\n        this.currentCounterValue = 0;\n      }\n\n      this.setState({\n        counterValue: currentCounterValue\n      });\n    };\n\n    this.state = {\n      counterValue: this.props.initValue\n    };\n    this.currentCounterValue = this.state.counterValue;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counter\",\n        children: [/*#__PURE__*/_jsxDEV(Display, {\n          displayValue: this.state.counterValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsPanel, {\n          buttonMethod: this.addValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsPanel, {\n          buttonMethod: this.addValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/ar2r1/Desktop/React.JS/0.2 NODE JS/counter-app/src/Counter.js"],"names":["React","Component","Display","ButtonsPanel","Counter","constructor","props","addValue","action","currentCounterValue","initValue","setState","counterValue","state","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAE5BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,QAVmB,GAUPC,MAAD,IAAY;AACnB;AAEA,UAAGA,MAAM,KAAK,KAAd,EAAqB;AACjB,aAAKC,mBAAL,IAA4B,CAA5B;AACH,OAFD,MAEO,IAAGD,MAAM,KAAK,QAAd,EAAwB;AAC3B,aAAKC,mBAAL,GAA2B,KAAKH,KAAL,CAAWI,SAAtC;AACH,OAFM,MAEA;AACH,aAAKD,mBAAL,GAA2B,CAA3B;AACH;;AAED,WAAKE,QAAL,CAAc;AACVC,QAAAA,YAAY,EAAEH;AADJ,OAAd;AAGH,KAxBkB;;AAEf,SAAKI,KAAL,GAAa;AACTD,MAAAA,YAAY,EAAE,KAAKN,KAAL,CAAWI;AADhB,KAAb;AAGA,SAAKD,mBAAL,GAA2B,KAAKI,KAAL,CAAWD,YAAtC;AACH;;AAoBDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI,QAAC,OAAD;AAAS,UAAA,YAAY,EAAE,KAAKD,KAAL,CAAWD;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,YAAD;AAAc,UAAA,YAAY,EAAE,KAAKL;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,YAAD;AAAc,UAAA,YAAY,EAAE,KAAKA;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAtC2B;;AA8ChC,eAAeH,OAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport './Counter.css';\r\nimport Display from './Display';\r\nimport ButtonsPanel from './ButtonsPanel';\r\n\r\nclass Counter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            counterValue: this.props.initValue\r\n        }\r\n        this.currentCounterValue = this.state.counterValue\r\n    }\r\n\r\n    \r\n\r\n    addValue = (action) => {\r\n        // let currentCounterValue = this.state.counterValue;\r\n\r\n        if(action === 'add') {\r\n            this.currentCounterValue += 1;\r\n        } else if(action === 'reinit') {\r\n            this.currentCounterValue = this.props.initValue;\r\n        } else {\r\n            this.currentCounterValue = 0;\r\n        }\r\n        \r\n        this.setState({\r\n            counterValue: currentCounterValue\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='counter'>\r\n                    <Display displayValue={this.state.counterValue} />\r\n                    <ButtonsPanel buttonMethod={this.addValue}/>\r\n                    <ButtonsPanel buttonMethod={this.addValue}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}