{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ar2r1\\\\Desktop\\\\React.JS\\\\0.2 NODE JS\\\\counter-app\\\\src\\\\Counter.js\";\nimport React, { Component } from 'react';\nimport './Counter.css';\nimport Display from './Display';\nimport ButtonsPanel from './ButtonsPanel'; // import Clock from './Clock';\n\nimport ClockFunctional from './ClockFunctional';\nimport Step from './Step';\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addValue = action => {\n      this.setState((prevState, prevProps) => {\n        let currentCounterValue = prevState.counterValue;\n\n        if (action === 'add') {\n          currentCounterValue += 1;\n        } else if (action === 'reinit') {\n          currentCounterValue = prevProps.initValue;\n        } else {\n          currentCounterValue = 0;\n        }\n\n        return {\n          counterValue: currentCounterValue\n        };\n      });\n    };\n\n    this.toggleClock = () => {\n      this.setState(prevstate => {\n        return {\n          showClock: !prevstate.showClock\n        };\n      });\n    };\n\n    this.initStateValue = 10;\n    this.state = {\n      counterValue: this.initStateValue,\n      showClock: true\n    };\n  }\n\n  render() {\n    let clockElement = '';\n\n    if (this.state.showClock == true) {\n      // clockElement = <Clock toggleClockMethod={this.toggleClock}/>\n      clockElement = /*#__PURE__*/_jsxDEV(ClockFunctional, {\n        toggleClockMethod: this.toggleClock\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 28\n      }, this);\n    } else {\n      clockElement = /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"show-clock\",\n        onClick: this.toggleClock,\n        children: \"show clock\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 28\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"counter\",\n        children: [/*#__PURE__*/_jsxDEV(Step, {\n          setStepMethod: this.setStepOnInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), clockElement]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/ar2r1/Desktop/React.JS/0.2 NODE JS/counter-app/src/Counter.js"],"names":["React","Component","Display","ButtonsPanel","ClockFunctional","Step","Counter","constructor","props","addValue","action","setState","prevState","prevProps","currentCounterValue","counterValue","initValue","toggleClock","prevstate","showClock","initStateValue","state","render","clockElement","setStepOnInput"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,eAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;AAE5BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,UAAMA,KAAN;;AAFe,SAcnBC,QAdmB,GAcPC,MAAD,IAAY;AAEnB,WAAKC,QAAL,CAAe,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACrC,YAAIC,mBAAmB,GAAGF,SAAS,CAACG,YAApC;;AAEA,YAAGL,MAAM,KAAK,KAAd,EAAqB;AACjBI,UAAAA,mBAAmB,IAAI,CAAvB;AACH,SAFD,MAEO,IAAGJ,MAAM,KAAK,QAAd,EAAwB;AAC3BI,UAAAA,mBAAmB,GAAGD,SAAS,CAACG,SAAhC;AACH,SAFM,MAEA;AACHF,UAAAA,mBAAmB,GAAG,CAAtB;AACH;;AAED,eAAO;AACHC,UAAAA,YAAY,EAAED;AADX,SAAP;AAGH,OAdD;AAeH,KA/BkB;;AAAA,SAiCnBG,WAjCmB,GAiCL,MAAM;AAChB,WAAKN,QAAL,CAAiBO,SAAD,IAAe;AAC3B,eAAO;AACHC,UAAAA,SAAS,EAAE,CAACD,SAAS,CAACC;AADnB,SAAP;AAGH,OAJD;AAKH,KAvCkB;;AAGf,SAAKC,cAAL,GAAsB,EAAtB;AAEA,SAAKC,KAAL,GAAa;AACTN,MAAAA,YAAY,EAAE,KAAKK,cADV;AAETD,MAAAA,SAAS,EAAE;AAFF,KAAb;AAKH;;AA+BDG,EAAAA,MAAM,GAAG;AAEL,QAAIC,YAAY,GAAG,EAAnB;;AAEA,QAAI,KAAKF,KAAL,CAAWF,SAAX,IAAwB,IAA5B,EAAkC;AAC9B;AACAI,MAAAA,YAAY,gBAAG,QAAC,eAAD;AAAiB,QAAA,iBAAiB,EAAE,KAAKN;AAAzC;AAAA;AAAA;AAAA;AAAA,cAAf;AACH,KAHD,MAGO;AACHM,MAAAA,YAAY,gBAAG;AAAM,QAAA,SAAS,EAAC,YAAhB;AAA6B,QAAA,OAAO,EAAE,KAAKN,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAf;AACH;;AAED,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCAII,QAAC,IAAD;AAAM,UAAA,aAAa,EAAE,KAAKO;AAA1B;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKKD,YALL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AAjE2B;;AAyEhC,eAAejB,OAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport './Counter.css';\r\nimport Display from './Display';\r\nimport ButtonsPanel from './ButtonsPanel';\r\n// import Clock from './Clock';\r\nimport ClockFunctional from './ClockFunctional';\r\nimport Step from './Step';\r\n\r\nclass Counter extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.initStateValue = 10;\r\n\r\n        this.state = {\r\n            counterValue: this.initStateValue,\r\n            showClock: true,\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    addValue = (action) => {\r\n        \r\n        this.setState( (prevState, prevProps) => {\r\n            let currentCounterValue = prevState.counterValue;\r\n\r\n            if(action === 'add') {\r\n                currentCounterValue += 1;\r\n            } else if(action === 'reinit') {\r\n                currentCounterValue = prevProps.initValue;\r\n            } else {\r\n                currentCounterValue = 0;\r\n            }\r\n\r\n            return({\r\n                counterValue: currentCounterValue\r\n            });\r\n        });\r\n    }\r\n\r\n    toggleClock = () => {\r\n        this.setState ( (prevstate) => {\r\n            return({\r\n                showClock: !prevstate.showClock\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let clockElement = '';\r\n\r\n        if (this.state.showClock == true) {\r\n            // clockElement = <Clock toggleClockMethod={this.toggleClock}/>\r\n            clockElement = <ClockFunctional toggleClockMethod={this.toggleClock} />\r\n        } else {\r\n            clockElement = <span className='show-clock' onClick={this.toggleClock}>show clock</span>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className='counter'>\r\n                    {/* <Display displayValue={this.state.counterValue} />\r\n                    <ButtonsPanel buttonMethod={this.addValue}/>\r\n                    <ButtonsPanel buttonMethod={this.addValue}/> */}\r\n                    <Step setStepMethod={this.setStepOnInput}/>\r\n                    {clockElement}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}